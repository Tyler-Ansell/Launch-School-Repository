Take a look at the following code:

name = 'Bob'
save_name = name
name = 'Alice'
puts name, save_name
What does this code print out? Think about it for a moment before continuing.

If you said that code printed

Alice
Bob
you are 100% correct, and the answer should come as no surprise. Now, let's look at something a bit different:

name = 'Bob'
save_name = name
name.upcase!
puts name, save_name
What does this print out? Can you explain these results?

This prints out:
BOB
BOB

The reason the first example prints out Alice and Bob separately, is that the save_name variable is tied to a physical space where name = Bob, 
so that's why it prints out Bob even after name is reassigned to Alice.
The reason the second example prints out BOB and BOB is that upcase! is a mutating method, meaning that it alters all instances of name. This means that
when save_name and name are called they're both linked to the result of name.upcase!, which permanently alters Bob to BOB.

  

